import telebot
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from My import Bot_Food_Token
from DBfunctions import db

bot = telebot.TeleBot(Bot_Food_Token.TOKEN)

# """–∫–Ω–æ–ø–∫–∏ Help, –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?"""
# markupH = types.ReplyKeyboardMarkup(resize_keyboard=True)
# button_1 = types.KeyboardButton('Help')
# button_2 = types.KeyboardButton('–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω')
# button_3 = types.KeyboardButton('–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?')
# markupH.add(button_1)
# markupH.add(button_2)
# markupH.add(button_3)

markupH = types.InlineKeyboardMarkup()
button_1 = types.InlineKeyboardButton('Help', callback_data='help')
button_2 = types.InlineKeyboardButton('–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω', callback_data='order')
button_3 = types.InlineKeyboardButton('–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?', callback_data='time')
markupH.add(button_1)
markupH.add(button_2)
markupH.add(button_3)
#
# """–∫–Ω–æ–ø–∫–∏ –¥–ª—è basket?"""
# markupB = types.ReplyKeyboardMarkup(resize_keyboard=True)
# button_1 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å')
# button_2 = types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å')
# markupB.add(button_1)
# markupB.add(button_2)

# """–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è basket?"""
# markupUB = types.ReplyKeyboardMarkup(resize_keyboard=True)
# button_1 = types.KeyboardButton('üóë')
# button_2 = types.KeyboardButton('-')
# button_3 = types.KeyboardButton('–ë–ª—é–¥–æ')
# button_4 = types.KeyboardButton('+')
# markupUB.add(button_1, button_2, button_3, button_4)

# """–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è basket?"""
# markupPb = types.ReplyKeyboardMarkup(resize_keyboard=True)
# button_1 = types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
# markupPb.add(button_1)

my_dict_orders = {"user_tg_chat_id": [(1, '–ü–∏—Ü—Ü–∞', 1, 20), (2, '–û–º–ª–µ—Ç', 1, 17), (3, '–§–æ-–±–æ', 1, 33), ]}
"""–∑–∞–ø–æ–ª–Ω–∏—Ç—å —á–µ–º-—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞"""

"""–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –ë–î –∏ –ø–µ—Ä–µ–≤–æ–¥ –∏—Ö –≤ —Å–ø–∏—Å–æ–∫ [–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞-–¥–∞—Ç–∞](–≤—Ä–æ–¥–µ?).
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –ë–î –ø–æ –û–ª—å–≥–∏–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ –∫–æ—Ä—Ç–µ–∂–µ–π. –ß—Ç–æ –∂ –∑–∞ –∂–∏–∑–Ω—å, —Ç–æ —Ç–∞–∫–∞—è?"""


def history_orders(data):
    list_history_orders = []

    for index, history in enumerate(data_history):
        """–≤–∑—è—Ç—å –∏–∑ –û–ª–µ–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–±–æ—Ä —Å –∑–∞–∫–∞–∑–∞–º–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –ø–æ –æ–¥–Ω–æ–º—É: –∑–∞–∫–∞–∑ –Ω–æ–º–µ—Ä - –¥–∞—Ç–∞"""
        res_hystory = f'{history[0]} - {history[3]}'
        list_history_orders.append(res_hystory)
    return list_history_orders


"""–∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏, –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤?"""

# data_history = db.orders_history(message.chat.id)
# data_history = db.orders_history('3fdf5g544')  # –¢–µ—Å—Ç
data_history = [(1, 1, 1, '20240519 15:40:00', 50, '–≥ –ú–∏–Ω—Å–∫, –ø—Ä –î–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 154'),
                (2, 1, 1, '20240519 16:40:00', 50, '–≥ –ú–∏–Ω—Å–∫, –ø—Ä –î–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 84'),
                (3, 1, 1, '20240519 17:40:00', 50, '–≥ –ú–∏–Ω—Å–∫, –ø—Ä –î–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 154'),
                (4, 1, 1, '20240519 18:40:00', 50, '–≥ –ú–∏–Ω—Å–∫, –ø—Ä –î–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 15'),
                (5, 1, 1, '20240519 19:40:00', 50, '–≥ –ú–∏–Ω—Å–∫, –ø—Ä –î–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 54'),
                (6, 1, 1, '20240519 20:40:00', 50, '–≥ –ú–∏–Ω—Å–∫, –ø—Ä –î–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 14')]  # –¢–µ—Å—Ç

print(history_orders(data_history))

"""–§—É–Ω–∫—Ü–∏—è `generate_markup(page)` —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º"""


def generate_markup(page):
    markup = InlineKeyboardMarkup(row_width=1)
    start_index = page * 2  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –≤—ã–≤–æ–¥–∏–º—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    end_index = start_index + 2  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –≤—ã–≤–æ–¥–∏–º—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    for item in history_orders(data_history)[start_index:end_index]:
        markup.add(InlineKeyboardButton(item, callback_data="m" + f'{item}'))
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton("<<<", callback_data='<' + f'{page - 1}'))
    if end_index < len(history_orders(data_history)):
        nav_buttons.append(InlineKeyboardButton(">>>", callback_data='>' + f'{page + 1}'))
    markup.row(*nav_buttons)
    return markup


def start(message):
    if message.text == '/my_orders':
        # """–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞"""
        # if my_dict_orders["user_tg_chat_id"]:
        bot.send_message(message.chat.id, "–¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑ ‚¨áÔ∏è")
        """–≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ?"""
        """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –ë–î? –í—ã–≤–µ–ª–∏"""
        # data_my_order = db.my_orders(message.chat.id)
        # data_my_client = db.get_client_data(message.chat.id)
        # data_dishes_my_order = db.dishes_data(history[0])
        data_my_order = db.my_orders('nfj4j3nj4')  # –¢–µ—Å—Ç
        data_my_client = db.get_client_data('nfj4j3nj4')  # –¢–µ—Å—Ç
        data_dishes_my_order = db.dishes_data(1)  # –¢–µ—Å—Ç

        """–¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –∑–∞–∫–∞–∑—É: –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ—á—Ç–∞, –∞–¥—Ä–µ—Å"""
        """–í—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏"""
        # for user in data_my_client:
        data_user = f'{data_my_client[2]}\n{data_my_client[3]}\n{data_my_client[4]}\n{data_my_client[5]}'
        bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ")
        bot.send_message(message.chat.id, data_user)

        print(data_my_order)
        print(data_my_client)
        print(data_dishes_my_order)
        """–≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ (—Ç–æ–∂–µ –∏–∑ –±–¥ –∏–ª–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã)?"""
        """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –æ—Ç–∫—É–¥–∞(–ë–î)?"""
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –±–ª—é–¥ –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:")
        res_sum = 0
        res_dish_hist = ''
        for dish in data_dishes_my_order:
            res_dish_hist += f'{dish[1]}\n'
            res_sum += dish[2] * dish[3]
        bot.send_message(message.chat.id, res_dish_hist)
        bot.send_message(message.chat.id, (str(res_sum) + " —Ä—É–±."), reply_markup=markupH)

    # elif message.text == 'Help':
    #     bot.send_message(message.chat.id, "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É –ª–∏—Ü—É –∏–ª–∏ –∫–æ–º—É-—Ç–æ —Ç–∞–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +375296333111")

    # elif message.text == '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω':
    #     # data_my_order = db.my_orders(message.chat.id)
    #     # data_my_client = db.get_client_data(message.chat.id)
    #     data_my_order = db.my_orders('nfj4j3nj4')  # –¢–µ—Å—Ç
    #     data_my_client = db.get_client_data('nfj4j3nj4')  # –¢–µ—Å—Ç
    #     """–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑-–¥–µ–ª–∏–≤–µ—Ä–∏–¥?"""
    #     if data_my_order[0][2] == 0:
    #         bot.send_message(message.chat.id, "–î–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –∑–∞–∫–∞–∑? –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ì–î–ï?")
    #
    #     elif data_my_order[0][2] == 1:
    #         bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")

    # elif message.text == '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?':
    #     bot.send_message(message.chat.id, "–ñ–¥–µ–º —à–µ–¥—É–ª–µ—Ä–∞? –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å - —ç—Ç–æ –Ω–µ –ø—Ä–µ–¥–µ–ª...?")

    if message.text == '/history':
        bot.send_message(
            message.chat.id, "–°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.",
        )
        bot.send_message(
            message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –∑–∞–∫–∞–∑–æ–≤ ‚¨áÔ∏è:",
            reply_markup=generate_markup(0)
        )

    # x = ['a', 'b', 'c', 'd', 'e', 'w', 'df', 'ww', 'x', 'qa', 'wsx']
    #
    # for i in range(0, len(x), 3):
    #     input('–í–≤–µ–¥–∏ "go" ')
    #     print(x[i: i + 3])
    # print('–í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞')

    # if message.text == '/basket':
    #     # user_dict[message.chat.id] += message.text
    #     if my_dict_orders["user_tg_chat_id"]:
    #         bot.send_message(
    #             message.chat.id, "–°–ø–∏—Å–æ–∫ –±–ª—é–¥ c —Ü–µ–Ω–æ–π –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ ü•∞:",
    #             reply_markup=markupB
    #         )
    #         """—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –±–ª—é–¥ c —Ü–µ–Ω–æ–π –∏ –æ–±—â–µ–π —Å—É–º–º–æ–π –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    #
    #         # list_dishes_price_basket(my_dict_orders["user_tg_chat_id"])
    #         res_sum_bask = 0
    #         # res_dish_bask = ''
    #         for dish_bask in my_dict_orders["user_tg_chat_id"]:
    #             print(dish_bask)
    #             res_dish_bask = f'–ë–ª—é–¥–æ {dish_bask[1]} {dish_bask[3]} - {dish_bask[2]} - {dish_bask[2] * dish_bask[3]}'
    #             res_sum_bask += dish_bask[2] * dish_bask[3]
    #             bot.send_message(message.chat.id, res_dish_bask)
    #         bot.send_message(message.chat.id, (str(res_sum_bask) + " —Ä—É–±."))
    #
    #     else:
    #         bot.send_message(message.chat.id, "Basket –ø—É—Å—Ç–∞—è!", reply_markup=None)
    #
    # elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å':
    #
    #     markupUB = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    #     """–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è basket?"""
    #     for ind_but, dish_but in enumerate(my_dict_orders["user_tg_chat_id"]):
    #         print(dish_but)
    #         res_upd_dish_bask = f'{dish_but[1]} - {dish_but[2]}'
    #
    #         button_1 = types.KeyboardButton('üóë')
    #         button_2 = types.KeyboardButton('-')
    #         button_3 = types.KeyboardButton(res_upd_dish_bask)
    #         button_4 = types.KeyboardButton('+')
    #         markupUB.add(button_1, button_2, button_3, button_4)
    #
    #     bot.send_message(
    #         message.chat.id, "–°–ø–∏—Å–æ–∫ –±–ª—é–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ ü•∞:",
    #         reply_markup=markupUB
    #     )
    #
    #     """—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –±–ª—é–¥ c —Ü–µ–Ω–æ–π –∏ –æ–±—â–µ–π —Å—É–º–º–æ–π –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    #     res_sum_bask = 0
    #     # res_dish_bask = ''
    #     for dish_bask in my_dict_orders["user_tg_chat_id"]:
    #         print(dish_bask)
    #         res_dish_bask = f'–ë–ª—é–¥–æ {dish_bask[1]} {dish_bask[3]} - {dish_bask[2]} - {dish_bask[2] * dish_bask[3]}'
    #         res_sum_bask += dish_bask[2] * dish_bask[3]
    #         bot.send_message(message.chat.id, res_dish_bask)
    #     bot.send_message(message.chat.id, (str(res_sum_bask) + " —Ä—É–±."))
    #
    #     """–≤—ã–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–¥–µ–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    # # elif message.text == 'üóë':
    #
    # elif message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å':
    #
    #     bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–∫–∞ /profile ü•∞")
    #     """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    #     # if db.is_registered(message.chat.id):
    #     if db.is_registered('3fdf5g544'):
    #         """–≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ?"""
    #         """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –ë–î? –í—ã–≤–µ–ª–∏"""
    #
    #         # data_my_client = db.get_client_data(message.chat.id)
    #         data_my_order = db.my_orders('3fdf5g544')  # –¢–µ—Å—Ç
    #         data_my_client = db.get_client_data('3fdf5g544')  # –¢–µ—Å—Ç
    #         data_dishes_my_order = db.dishes_data(1)  # –¢–µ—Å—Ç
    #
    #         """–¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –∑–∞–∫–∞–∑—É: –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ—á—Ç–∞, –∞–¥—Ä–µ—Å"""
    #         """–í—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏"""
    #         # for user in data_my_client:
    #         data_user = f'{data_my_client[2]}\n{data_my_client[3]}\n{data_my_client[4]}\n{data_my_client[5]}'
    #         bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ")
    #         bot.send_message(message.chat.id, data_user, reply_markup=markupPb)
    #
    #         print(data_my_client)
    #         print(data_dishes_my_order)
    #         """–≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ (–∏–∑ –∫–æ—Ä–∑–∏–Ω—ã)?"""
    #         """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –æ—Ç–∫—É–¥–∞(basket)?"""
    #         bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –±–ª—é–¥ –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:")
    #
    #         res_sum_bask = 0
    #         res_dish_bask = ''
    #         for dish_bask in my_dict_orders["user_tg_chat_id"]:
    #             print(dish_bask)
    #             # res_dish_bask = f'{dish_bask[1]}'
    #             res_dish_bask += f'{dish_bask[1]}\n'
    #             res_sum_bask += dish_bask[2] * dish_bask[3]
    #             # bot.send_message(message.chat.id, res_dish_bask)
    #         bot.send_message(message.chat.id, res_dish_bask)
    #         bot.send_message(message.chat.id, (str(res_sum_bask) + " —Ä—É–±."))
    #
    # elif message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
    #
    #     bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –∞–∫—Ç–∏–≤–µ–Ω —É—à–µ–ª –≤ –ë–î –∏ –ø–æ—à–µ–ª –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è")
    #     """–î–∞–ª–µ–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–∞–∫–∞—è-—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ú–∏—Ä–æ—Å–ª–∞–≤–∞ –∏ –í–ª–∞–¥–∞"""
    #     bot.send_message(message.chat.id, "–ñ–¥–µ–º –∫–∞–∫—É—é-—Ç–æ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ú–∏—Ä–æ—Å–ª–∞–≤–∞ –∏ –í–ª–∞–¥–∞")
    #
    #     """–ù—É–∂–Ω–∞ –∫–∞–∫–∞—è-—Ç–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    #     bot.send_message(message.chat.id,
    #                      "–û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ id –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –º–∞–∫—Å –±–ª—é–¥–∞ + 30 –º–∏–Ω—É—Ç. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è?")
    #
    #     bot.send_message(message.chat.id, "–î–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –∑–∞–∫–∞–∑? –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ì–î–ï?")

    if message.text == '/basket':
        send_basket(message.chat.id)

    elif message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –∞–∫—Ç–∏–≤–µ–Ω —É—à–µ–ª –≤ –ë–î –∏ –ø–æ—à–µ–ª –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è")
        bot.send_message(message.chat.id, "–ñ–¥–µ–º –∫–∞–∫—É—é-—Ç–æ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ú–∏—Ä–æ—Å–ª–∞–≤–∞ –∏ –í–ª–∞–¥–∞")
        bot.send_message(message.chat.id,
                         "–û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ id –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –º–∞–∫—Å –±–ª—é–¥–∞ + 30 –º–∏–Ω—É—Ç. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è?")
        bot.send_message(message.chat.id, "–î–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –∑–∞–∫–∞–∑? –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ì–î–ï?")

    """—Ñ—É–Ω–∫—Ü–∏—è send_basket, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏"""


def send_basket(chat_id):
    if my_dict_orders["user_tg_chat_id"]:
        markupB = InlineKeyboardMarkup(row_width=2)
        button_1 = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change')
        button_2 = InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='continue')
        markupB.add(button_1, button_2)

        res_sum_bask = 0
        res_dish_bask = ''
        for dish_bask in my_dict_orders["user_tg_chat_id"]:
            res_dish_bask += f'–ë–ª—é–¥–æ {dish_bask[1]} {dish_bask[3]} - {dish_bask[2]} - {dish_bask[2] * dish_bask[3]}\n'
            res_sum_bask += dish_bask[2] * dish_bask[3]

        bot.send_message(chat_id,
                         f"–°–ø–∏—Å–æ–∫ –±–ª—é–¥ c —Ü–µ–Ω–æ–π –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ ü•∞:\n{res_dish_bask}{res_sum_bask} —Ä—É–±.",
                         reply_markup=markupB)
    else:
        bot.send_message(chat_id, "Basket –ø—É—Å—Ç–∞—è!", reply_markup=None)


def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id, )
    flag = call.data[0]
    data = call.data[1:]
    if flag == "m":
        bot.send_message(call.message.chat.id, f"–í—ã–±—Ä–∞–Ω–Ω—ã–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑ ‚¨áÔ∏è:  {data}")
        """–≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ?"""
        """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –ë–î? –í—ã–≤–µ–ª–∏"""
        # data_my_order_hist = db.my_orders(message.chat.id)
        # data_my_client_hist = db.get_client_data(message.chat.id)
        # data_dishes_hist = db.dishes_data(history[0])
        data_my_client_hist = db.get_client_data('3fdf5g544')  # –¢–µ—Å—Ç
        data_dishes_hist = db.dishes_data(1)  # –¢–µ—Å—Ç

        """–¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –∑–∞–∫–∞–∑—É: –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ—á—Ç–∞, –∞–¥—Ä–µ—Å"""
        # for user in data_my_client:
        data_user = f'{data_my_client_hist[2]}\n{data_my_client_hist[3]}\n{data_my_client_hist[4]}\n{data_my_client_hist[5]}'
        bot.send_message(call.message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ:")
        bot.send_message(call.message.chat.id, data_user)

        print(data_my_client_hist)
        print(data_dishes_hist)
        """–≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ (—Ç–æ–∂–µ –∏–∑ –±–¥ –∏–ª–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã)?"""
        """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –æ—Ç–∫—É–¥–∞(–ë–î)?"""
        """–ù–ï –í—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏"""
        bot.send_message(call.message.chat.id, f"–°–ø–∏—Å–æ–∫ –±–ª—é–¥ –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ ‚¨áÔ∏è:   {data}")
        res_sum = 0
        res_dish_hist = ''
        for dish in data_dishes_hist:
            res_dish_hist += f'{dish[1]}\n'
            res_sum += dish[2] * dish[3]
        bot.send_message(call.message.chat.id, res_dish_hist)
        bot.send_message(call.message.chat.id, (str(res_sum) + " —Ä—É–±."))

    elif flag == "<" or flag == ">":
        page = int(data)

        bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –∑–∞–∫–∞–∑–æ–≤ ‚¨áÔ∏è", call.message.chat.id, call.message.message_id,
                              reply_markup=generate_markup(page))

    elif flag == "h":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã Help
        bot.send_message(call.message.chat.id,
                         "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É –ª–∏—Ü—É –∏–ª–∏ –∫–æ–º—É-—Ç–æ —Ç–∞–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +375296333111."
                         "–ü–æ–∑–≤–æ–Ω–∏ –º–Ω–µ, –ø–æ–∑–≤–æ–Ω–∏!")

    elif flag == "o":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
        # data_my_order = db.my_orders(message.chat.id)
        # data_my_client = db.get_client_data(message.chat.id)
        data_my_order = db.my_orders('nfj4j3nj4')  # –¢–µ—Å—Ç

        """–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑-–¥–µ–ª–∏–≤–µ—Ä–∏–¥?"""
        if data_my_order[0][2] == 0:
            bot.send_message(call.message.chat.id, "–î–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –∑–∞–∫–∞–∑? –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ì–î–ï?")

        elif data_my_order[0][2] == 1:
            bot.send_message(call.message.chat.id, "–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")

    elif flag == "t":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?
        bot.send_message(call.message.chat.id,
                         "–ñ–¥–µ–º —à–µ–¥—É–ª–µ—Ä–∞? –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å - —ç—Ç–æ –Ω–µ –ø—Ä–µ–¥–µ–ª...?")

    # elif call.data == 'help_command':
    #
    #     bot.send_message(call.message.chat.id,
    #                      "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É –ª–∏—Ü—É –∏–ª–∏ –∫–æ–º—É-—Ç–æ —Ç–∞–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +375296333111. –ü–æ–∑–≤–æ–Ω–∏ –º–Ω–µ, "
    #                      "–ø–æ–∑–≤–æ–Ω–∏!")
    # elif call.data == 'order_confirmed_command':
    #     # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
    #     bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'.")
    # elif call.data == 'time_left_command':
    #     # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?
    #     bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å?'.")

    """–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è basket?"""
    if call.data == 'change':
        markupUB = InlineKeyboardMarkup(row_width=4)
        for ind_but, dish_but in enumerate(my_dict_orders["user_tg_chat_id"]):
            res_upd_dish_bask = f'{dish_but[1]} - {dish_but[2]}'
            button_1 = InlineKeyboardButton('üóë', callback_data=f'delete_{dish_but[0]}')
            button_2 = InlineKeyboardButton('-', callback_data=f'decrease_{dish_but[0]}')
            button_3 = InlineKeyboardButton(res_upd_dish_bask, callback_data=f'info_{dish_but[0]}')
            button_4 = InlineKeyboardButton('+', callback_data=f'increase_{dish_but[0]}')
            markupUB.add(button_1, button_2, button_3, button_4)

        button_check = InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è', callback_data='check')
        markupUB.add(button_check)

        bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ –±–ª—é–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ ü•∞:", reply_markup=markupUB)

    elif call.data == 'continue':
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
        # if db.is_registered(message.chat.id):
        if db.is_registered('3fdf5g544'):
            """–≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ?"""
            """–≤–∑—è—Ç—å –∏—Ö –∏–∑ –ë–î? –í—ã–≤–µ–ª–∏"""

            # data_my_client = db.get_client_data(message.chat.id)
            data_my_client = db.get_client_data('3fdf5g544')
            data_my_order = db.my_orders('3fdf5g544')
            data_dishes_my_order = db.dishes_data(1)

            data_user = f'{data_my_client[2]}\n{data_my_client[3]}\n{data_my_client[4]}\n{data_my_client[5]}'
            markupPb = InlineKeyboardMarkup(row_width=1)
            button_1 = InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
            markupPb.add(button_1)

            bot.send_message(call.message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–µ")
            bot.send_message(call.message.chat.id, data_user)

            """—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –±–ª—é–¥ c —Ü–µ–Ω–æ–π –∏ –æ–±—â–µ–π —Å—É–º–º–æ–π –∑–∞–∫–∞–∑–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
            res_sum_bask = 0
            res_dish_bask = ''
            for dish_bask in my_dict_orders["user_tg_chat_id"]:
                res_dish_bask += f'{dish_bask[1]}\n'
                res_sum_bask += dish_bask[2] * dish_bask[3]

            bot.send_message(call.message.chat.id,
                             f"–°–ø–∏—Å–æ–∫ –±–ª—é–¥ –∏ –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:\n{res_dish_bask}{res_sum_bask} —Ä—É–±.",
                             reply_markup=markupPb)

        """—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –±–ª—é–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    elif call.data.startswith('delete_'):
        dish_id = int(call.data.split('_')[1])
        my_dict_orders["user_tg_chat_id"] = [dish for dish in my_dict_orders["user_tg_chat_id"] if dish[0] != dish_id]
        bot.send_message(call.message.chat.id, "–ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.")
        print(my_dict_orders["user_tg_chat_id"])
        send_basket(call.message.chat.id)

        """—Ñ—É–Ω–∫—Ü–∏—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –±–ª—é–¥ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    elif call.data.startswith('decrease_'):
        dish_id = int(call.data.split('_')[1])
        for i, dish in enumerate(my_dict_orders["user_tg_chat_id"]):
            if dish[0] == dish_id:
                if dish[2] > 1:
                    dish_list = list(dish)
                    dish_list[2] -= 1
                    my_dict_orders["user_tg_chat_id"][i] = tuple(dish_list)
                else:
                    my_dict_orders["user_tg_chat_id"].pop(i)
                break
        bot.send_message(call.message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥–∞ —É–º–µ–Ω—å—à–µ–Ω–æ.")
        print(my_dict_orders["user_tg_chat_id"])
        send_basket(call.message.chat.id)

        """—Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –±–ª—é–¥ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    elif call.data.startswith('increase_'):
        dish_id = int(call.data.split('_')[1])
        for i, dish in enumerate(my_dict_orders["user_tg_chat_id"]):
            if dish[0] == dish_id:
                dish_list = list(dish)
                dish_list[2] += 1
                my_dict_orders["user_tg_chat_id"][i] = tuple(dish_list)
                break
        bot.send_message(call.message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥–∞ —É–≤–µ–ª–∏—á–µ–Ω–æ.")
        print(my_dict_orders["user_tg_chat_id"])
        send_basket(call.message.chat.id)

        """–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ check –≤ query_handler –≤—ã–∑—ã–≤–∞–µ—Ç send_basket, –æ–±–Ω–æ–≤–ª—è—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã"""
    elif call.data == 'check':
        send_basket(call.message.chat.id)


    elif call.data == 'confirm':
        bot.send_message(call.message.chat.id, "–ó–∞–∫–∞–∑ –∞–∫—Ç–∏–≤–µ–Ω —É—à–µ–ª –≤ –ë–î –∏ –ø–æ—à–µ–ª –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è")
        bot.send_message(call.message.chat.id, "–ñ–¥–µ–º –∫–∞–∫—É—é-—Ç–æ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ú–∏—Ä–æ—Å–ª–∞–≤–∞ –∏ –í–ª–∞–¥–∞")
        bot.send_message(call.message.chat.id,
                         "–û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ id –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –º–∞–∫—Å –±–ª—é–¥–∞ + 30 –º–∏–Ω—É—Ç. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è?")
        bot.send_message(call.message.chat.id, "–î–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –∑–∞–∫–∞–∑? –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ì–î–ï?")


print("Ready")

if __name__ == "__main__":
    @bot.message_handler(content_types=['text'])
    def message_handler(message):
        start(message)


    # def send_history(message):
    #     send_welcome(message)

    @bot.callback_query_handler(func=lambda call: True)
    def callback_handler(call):
        query_handler(call)


    bot.infinity_polling()
